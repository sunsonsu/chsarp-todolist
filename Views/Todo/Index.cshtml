@model List<myTodoList.Models.TodoItem>

<h3>Tasks</h3>
<form method="post" action="/Todo/Add">
    <div class="mb-3">
        <label for="title" class="form-label">Task Name</label>
        <input type="text" class="form-control" id="title" name="title" placeholder="Task Name" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <input type="text" class="form-control" id="description" name="description" placeholder="Enter a task..." required />
    </div>
    <button type="submit" class="btn btn-primary">Add Task</button>
</form>

<ul class="mt-3">
    @foreach (var todo in Model)
    {
        <li class="m-3">
            <div class="card w-75">
                <div class="card-body" style="@(todo.IsCompleted ? "background-color:lightgreen;" : "")">
                    <h5 class="card-title">@todo.Title </h5>
                        <span>
                            @todo.Description
                        </span>
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-success me-2" onclick="toggleComplete(@todo.Id)">
                                @if (todo.IsCompleted)
                                {
                                    <span>Undo</span>
                                }
                                else
                                {
                                    <span>Complete</span>
                                }
                            </button>
                            <button type="button" class="btn btn-danger" 
                            onclick="if(confirmDelete()) { DeleteItem(@todo.Id); }">Delete</button>
                        </div>
                </div>
            </div>
        </li>
    }
</ul>


<script>
    function confirmDelete() {
        return confirm('Are you sure you want to delete this task?');
    }
    function toggleComplete(id) {
        fetch(`/Todo/ToggleComplete/${id}`, {
            method: 'POST'
        }).then(() => {
            window.location.reload();
        });
    }
    function DeleteItem(id) {
        fetch(`/Todo/Delete/${id}`).then(() => {
            window.location.reload();
        });
    }
</script>
